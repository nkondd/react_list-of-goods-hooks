{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIdReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA9CD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAkBzB,OAhBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,KAAKjB,EAASM,KACd,QACE,OAAO,MAITF,GACFK,EAAaS,UAGRT,EAwBcU,CACnBlB,EACA,CAAEM,WAAUH,eAGRgB,EAAuBhB,GAAcG,IAAaP,EAASM,KAEjE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAaP,EAASc,WAEtCU,QAlCmB,WACzBhB,EAAYR,EAASc,WA0BjB,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAaP,EAASgB,SAEtCQ,QA1Ca,WACnBhB,EAAYR,EAASgB,SAkCjB,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAanB,IAEjBoB,QAlDQ,WACdnB,GAAc,SAAAoB,GAAO,OAAKA,MA0CtB,qBAYCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAvDI,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAkDf,sBAUJ,6BACE,6BACGG,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCpIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.93a21743.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIdReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIdReversed(current => !current);\n  };\n\n  const reset = () => {\n    setIdReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const isResetButtonVisible = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}